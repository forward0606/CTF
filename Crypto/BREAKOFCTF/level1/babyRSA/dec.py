from Crypto.Util.number import inverse

import libnum

def rsa_enc(m, e, n):
    return pow(m, e, n)

def rsa_dec(c, d, n):
    return pow(c, d, n)
def find_d(e, r):
    return inverse(e, r)
N = "MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAL47hb4jkhf8YudWOUZX8SxhDyh+iBvJ"
e = "NtKeXXVoUxV1AgMBAAE="

N = libnum.s2n(N)
e = libnum.s2n(e)

print(N)
print(e)
# N = 4046824612280609136079109889224036489320328588763504310623330768489528500682447720580249353065253644496160423663896355238842139765732410373394742246536778
# e = 447894734474683715068513991120300263598842791229

num = [2, 37, 47, 149, 769, 3593, 2826278661379866748539711437889403297510564904522641028572570175159495807544414727724017252868654376828548718887653132526900590872473302417147]

